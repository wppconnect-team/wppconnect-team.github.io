"use strict";(self.webpackChunkwppconnect_team_github_io=self.webpackChunkwppconnect_team_github_io||[]).push([[9602],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>h});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),p=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(i.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(t),m=a,h=u["".concat(i,".").concat(m)]||u[m]||d[m]||o;return t?r.createElement(h,s(s({ref:n},c),{},{components:t})):r.createElement(h,s({ref:n},c))}));function h(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=m;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l[u]="string"==typeof e?e:a,s[1]=l;for(var p=2;p<o;p++)s[p]=t[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},28063:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=t(87462),a=(t(67294),t(3905));const o={title:"Installation",sidebar_position:2},s=void 0,l={unversionedId:"projects/wppserver/installation",id:"projects/wppserver/installation",title:"Installation",description:"Wppconnect Server is a ready-to-use API, just download, install, and start using, simple as that.",source:"@site/docs/projects/wppserver/installation.md",sourceDirName:"projects/wppserver",slug:"/projects/wppserver/installation",permalink:"/docs/projects/wppserver/installation",draft:!1,editUrl:"https://github.com/wppconnect-team/wppconnect-team.github.io/tree/main/docs/projects/wppserver/installation.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Installation",sidebar_position:2},sidebar:"docs",previous:{title:"Introduction",permalink:"/docs/projects/wppserver/introduction"},next:{title:"Configuration",permalink:"/docs/projects/wppserver/configuration"}},i={},p=[{value:"Requirements",id:"requirements",level:2},{value:"Installation",id:"installation",level:2},{value:"Install puppeteer dependencies:",id:"install-puppeteer-dependencies",level:2},{value:"Clone repository",id:"clone-repository",level:2},{value:"Install Google Chrome",id:"install-google-chrome",level:2},{value:"Run Server",id:"run-server",level:2},{value:"Build Server",id:"build-server",level:2},{value:"Response:",id:"response",level:3},{value:"Documentations",id:"documentations",level:2}],c={toc:p},u="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(u,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Wppconnect Server is a ready-to-use API, just download, install, and start using, simple as that."),(0,a.kt)("h2",{id:"requirements"},"Requirements"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://nodejs.org/en/download/"},"Node.js")," version 16.14 or above (which can be checked by running ",(0,a.kt)("inlineCode",{parentName:"li"},"node -v"),").\nYou can use ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/nvm-sh/nvm"},"nvm")," for managing multiple Node versions on a single machine installed.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"When installing Node.js, you are recommended to check all checkboxes related to dependencies.")))),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("p",null,"Install the dependencies and start the server."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"yarn install\n//or\nnpm install\n")),(0,a.kt)("h2",{id:"install-puppeteer-dependencies"},"Install puppeteer dependencies:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"sudo apt-get install -y libxshmfence-dev libgbm-dev wget unzip fontconfig locales gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils\n")),(0,a.kt)("h2",{id:"clone-repository"},"Clone repository"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"\ngit clone https://github.com/wppconnect-team/wppconnect-server.git && cd wppconnect-server\n\n")),(0,a.kt)("h2",{id:"install-google-chrome"},"Install Google Chrome"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"\nwget -c https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb\n\nsudo apt-get update\n\nsudo apt-get install libappindicator1\n\nsudo dpkg -i google-chrome-stable_current_amd64.deb\n\n")),(0,a.kt)("h2",{id:"run-server"},"Run Server"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"yarn dev\n")),(0,a.kt)("h2",{id:"build-server"},"Build Server"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"yarn build\n")),(0,a.kt)("hr",null),(0,a.kt)("h1",{id:"configuration"},"Configuration"),(0,a.kt)("p",null,"This server use config.ts file to define some options, default values are:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  /* secret key to genereta access token */\n  "secretKey": "THISISMYSECURETOKEN",\n  "host": "http://localhost",\n  "port": "21465",\n  // create userDataDir for each puppeteer instance for working with Multi Device\n  "customUserDataDir": "./userDataDir/",\n  // starts all sessions when starting the server.\n  "startAllSession": true,\n  // sets the maximum global listeners. 0 = infinity.\n  "maxListeners": 15,\n  "webhook": {\n    "url": null,\n    // automatically downloads files to upload to the webhook\n    "autoDownload": true,\n    //marks messages as read when the webhook returns ok\n    "readMessage": false,\n    //sends all unread messages to the webhook when the server starts\n    "allUnreadOnStart": true\n  },\n  //functionality that archives conversations, runs when the server starts\n  "archive": {\n    "enable": true,\n    //maximum interval between filings.\n    "waitTime": 10,\n    "daysToArchive": 45\n  },\n  "log": {\n    "level": "error",\n    "logger": [ "console", "file" ]\n  },\n  "createOptions": {\n    "browserArgs": ["--no-sandbox"]\n  }\n}\n')),(0,a.kt)("h1",{id:"secret-key"},"Secret Key"),(0,a.kt)("p",null,"Your ",(0,a.kt)("inlineCode",{parentName:"p"},"secretKey")," is inside the ",(0,a.kt)("inlineCode",{parentName:"p"},"config.json")," file. You must change the default value to one that only you know."),(0,a.kt)("h1",{id:"generate-token"},"Generate Token"),(0,a.kt)("p",null,"To generate an access token, you must use your ",(0,a.kt)("inlineCode",{parentName:"p"},"SECRET_KEY"),"."),(0,a.kt)("p",null,"Using the route:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'  curl -X POST --location "http://localhost:21465/api/mySession/eUsouSeCreTo/generate-token"\n')),(0,a.kt)("h3",{id:"response"},"Response:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "status": "Success",\n  "session": "mySession",\n  "token": "$2b$10$duQ5YYV6fojn5qFiFv.aEuY32_SnHgcmxdfxohnjG4EHJ5_Z6QWhe",\n  "full": "wppconnect:$2b$10$duQ5YYV6fojn5qFiFv.aEuY32_SnHgcmxdfxohnjG4EHJ5_Z6QWhe"\n}\n')),(0,a.kt)("h1",{id:"using-token"},"Using Token"),(0,a.kt)("p",null,'Save the value of the "full" response. Then use this value to call the routes.'),(0,a.kt)("h1",{id:"examples"},"Examples"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},'#Starting Session\n# /api/:session/start-session\n\ncurl -X POST --location "http://localhost:21465/api/mySession/start-session" \\\n    -H "Accept: application/json" \\\n    -H "Content-Type: application/json" \\\n    -H "Authorization: Bearer \\$2b\\$10\\$JcHd97xHN6ErBuiLd7Yu4.r6McvOvEZZDQTQwev2MRK_zQObUZZ9C"\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},'#Get QrCode\n# /api/:session/start-session\n# when the session is starting if the method is called again it will return the base64 qrCode\n\ncurl -X POST --location "http://localhost:21465/api/mySession/start-session" \\\n    -H "Accept: application/json" \\\n    -H "Content-Type: application/json" \\\n    -H "Authorization: Bearer \\$2b\\$10\\$JcHd97xHN6ErBuiLd7Yu4.r6McvOvEZZDQTQwev2MRK_zQObUZZ9C"\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},'#Send Message\n# /api/:session/send-message\ncurl -X POST --location "http://localhost:21465/api/mySession/send-message" \\\n    -H "Content-Type: application/json; charset=utf-8" \\\n    -H "Accept: application/json" \\\n    -H "Authorization: Bearer \\$2b\\$10\\$8aQFQxnWREtBEMZK_iHMe.u7NeoNkjL7s6NYai_83Pb31Ycss6Igm" \\\n    -d "{\n          \\"phone\\": \\"5511982743910\\",\n          \\"message\\": \\"*Abner* Rodrigues\\"\n        }"\n')),(0,a.kt)("p",null,"See the ",(0,a.kt)("inlineCode",{parentName:"p"},"routes file")," for all the routes. ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/wppconnect-team/wppconnect-server/blob/main/src/routes/index.ts"},"here")," and HTTP ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/wppconnect-team/wppconnect-server/blob/main/requests.http"},"file"),"."),(0,a.kt)("h2",{id:"documentations"},"Documentations"),(0,a.kt)("p",null,"Access our documentation on ",(0,a.kt)("a",{parentName:"p",href:"https://documenter.getpostman.com/view/9139457/TzshF4jQ"},"postman")," "),(0,a.kt)("p",null,"Access our documentation on ",(0,a.kt)("a",{parentName:"p",href:"https://wppconnect.io/swagger/wppconnect-server"},"Swagger")),(0,a.kt)("p",null,'Or Swagger UI in your server. Acess router: "IP:PORT/api-docs"'))}d.isMDXComponent=!0}}]);