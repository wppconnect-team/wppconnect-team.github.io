"use strict";(self.webpackChunkwppconnect_team_github_io=self.webpackChunkwppconnect_team_github_io||[]).push([[43359],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=l(n),g=a,m=u["".concat(p,".").concat(g)]||u[g]||d[g]||o;return n?r.createElement(m,i(i({ref:t},c),{},{components:n})):r.createElement(m,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=g;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},94066:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(87462),a=(n(67294),n(3905));const o={title:"Configuration",sidebar_position:99},i=void 0,s={unversionedId:"projects/wppserver/configuration",id:"projects/wppserver/configuration",title:"Configuration",description:"Configuration SSL Letsencrypt",source:"@site/docs/projects/wppserver/configuration.md",sourceDirName:"projects/wppserver",slug:"/projects/wppserver/configuration",permalink:"/pt-BR/docs/projects/wppserver/configuration",draft:!1,editUrl:"https://github.com/wppconnect-team/wppconnect-team.github.io/tree/main/docs/projects/wppserver/configuration.md",tags:[],version:"current",sidebarPosition:99,frontMatter:{title:"Configuration",sidebar_position:99},sidebar:"docs",previous:{title:"Installation",permalink:"/pt-BR/docs/projects/wppserver/installation"},next:{title:"Frequently Asked Questions",permalink:"/pt-BR/docs/projects/wppserver/faq"}},p={},l=[{value:"Configuration SSL Letsencrypt",id:"configuration-ssl-letsencrypt",level:3}],c={toc:l},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"configuration-ssl-letsencrypt"},"Configuration SSL Letsencrypt"),(0,a.kt)("p",null,"Setting Up SSL Certificate with Nginx with Certbot and Letsencrypt."),(0,a.kt)("p",null,"Install nginx:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install nginx\n")),(0,a.kt)("p",null,"Remove nginx default site:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo rm /etc/nginx/sites-enabled/default\n")),(0,a.kt)("p",null,"Create a new nginx site to wppconnect-server:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/nginx/sites-available/wppconnect-server\n")),(0,a.kt)("p",null,"Edit and fill it with this information, changing ",(0,a.kt)("inlineCode",{parentName:"p"},"server_name")," to yours equivalent to ",(0,a.kt)("inlineCode",{parentName:"p"},"myapp.mydomain.com"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"server {\n  server_name myapp.mydomain.com;\n\n  location / {\n    proxy_pass http://127.0.0.1:21465;\n    proxy_http_version 1.1;\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection 'upgrade';\n    proxy_set_header Host $host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-Proto $scheme;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_cache_bypass $http_upgrade;\n  }\n}\n")),(0,a.kt)("p",null,"Create a symbolic links to enable nginx sites:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo ln -s /etc/nginx/sites-available/wppconnect-server /etc/nginx/sites-enabled\n")),(0,a.kt)("p",null,"By default, nginx limit body size to 1MB, which isn't enough for some media uploads. Lets change it to 20MB, adding a new line to config file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/nginx/nginx.conf\n...\nhttp {\n    ...\n    client_max_body_size 20M; # HANDLE BIGGER UPLOADS\n}\n")),(0,a.kt)("p",null,"Test nginx configuration and restart server:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nginx -t\nsudo service nginx restart\n")),(0,a.kt)("p",null,"Now, enable SSL (https) on your sites to use all app features like notifications and sending audio messages. An easy way to this is using Certbot:"),(0,a.kt)("p",null,"Install certbot:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo snap install --classic certbot\nsudo apt update\n")),(0,a.kt)("p",null,"Enable SSL on nginx (Fill / Accept all information required):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo certbot --nginx\n")))}d.isMDXComponent=!0}}]);