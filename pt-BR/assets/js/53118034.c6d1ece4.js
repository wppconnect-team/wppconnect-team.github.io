"use strict";(self.webpackChunkwppconnect_team_github_io=self.webpackChunkwppconnect_team_github_io||[]).push([[98260],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>d});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},c=Object.keys(e);for(o=0;o<c.length;o++)n=c[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(o=0;o<c.length;o++)n=c[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var a=o.createContext({}),p=function(e){var t=o.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=p(e.components);return o.createElement(a.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},f=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,a=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=p(n),f=r,d=u["".concat(a,".").concat(f)]||u[f]||h[f]||c;return n?o.createElement(d,s(s({ref:t},l),{},{components:n})):o.createElement(d,s({ref:t},l))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,s=new Array(c);s[0]=f;var i={};for(var a in t)hasOwnProperty.call(t,a)&&(i[a]=t[a]);i.originalType=e,i[u]="string"==typeof e?e:r,s[1]=i;for(var p=2;p<c;p++)s[p]=n[p];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}f.displayName="MDXCreateElement"},24944:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>h,frontMatter:()=>c,metadata:()=>i,toc:()=>p});var o=n(87462),r=(n(67294),n(3905));const c={description:"How to choose the best project of WPPConnect-Team",slug:"/choosing-the-best-project-of-wppconnect-team",sidebar_position:1},s="Choosing the best project",i={unversionedId:"projects/choosing-the-best-project",id:"projects/choosing-the-best-project",title:"Choosing the best project",description:"How to choose the best project of WPPConnect-Team",source:"@site/docs/projects/choosing-the-best-project.mdx",sourceDirName:"projects",slug:"/choosing-the-best-project-of-wppconnect-team",permalink:"/pt-BR/docs/choosing-the-best-project-of-wppconnect-team",draft:!1,editUrl:"https://github.com/wppconnect-team/wppconnect-team.github.io/tree/main/docs/projects/choosing-the-best-project.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{description:"How to choose the best project of WPPConnect-Team",slug:"/choosing-the-best-project-of-wppconnect-team",sidebar_position:1},sidebar:"docs",previous:{title:"Projects",permalink:"/pt-BR/docs/projects"},next:{title:"WA-JS",permalink:"/pt-BR/docs/wa-js"}},a={},p=[{value:"WPPConnect/WA-JS:",id:"wppconnectwa-js",level:3},{value:"LIB (WPPConnect):",id:"lib-wppconnect",level:3},{value:"Server (WPPConnect Server):",id:"server-wppconnect-server",level:3}],l={toc:p},u="wrapper";function h(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,o.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"choosing-the-best-project"},"Choosing the best project"),(0,r.kt)("p",null,"When seeking a solution to integrate WhatsApp into your applications or systems, it's crucial to choose the right project that meets your specific needs. Among the available projects, such as WPPConnect/WA-JS, LIB (WPPConnect), and Server (WPPConnect Server), each offers similar features but with distinct applications."),(0,r.kt)("h3",{id:"wppconnectwa-js"},"WPPConnect/WA-JS:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," WPPConnect/WA-JS is an open-source project aimed at exporting functions from WhatsApp Web. This project extracts key WhatsApp functions using webpack/babel and exposes them for easy use via the WPP variable. It's designed for those who want to create browser extensions or build a browser orchestrator from scratch using puppeteer/playwright. Simply put, you can also use WAJS by pasting it into the browser console and executing its functions."),(0,r.kt)("h3",{id:"lib-wppconnect"},"LIB (WPPConnect):"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:")," LIB (WPPConnect) is an open-source project developed by the JavaScript community. Its main goal is to export functions from WhatsApp Web to NodeJS. It simplifies browser orchestration, eliminating the need to create all the puppeteer/playwright code. Instead, it handles everything for you and provides functions that you can call via NodeJs."),(0,r.kt)("h3",{id:"server-wppconnect-server"},"Server (WPPConnect Server):"),(0,r.kt)("p",null,"The server streamlines the process of sending and receiving messages, managing contacts, creating groups, and more, using the power of JavaScript ES6, NodeJS, and a RESTful architecture, meaning HTTP calls :)"),(0,r.kt)("p",null,"When choosing between WPPConnect/WA-JS, LIB (WPPConnect), and Server (WPPConnect Server), consider your specific needs, offered functionalities, and ease of integration. Each project has its strengths and may be suitable for different scenarios. Make a careful analysis to select the project that best suits your use case and development goals."))}h.isMDXComponent=!0}}]);