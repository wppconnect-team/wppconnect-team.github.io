"use strict";(self.webpackChunkwppconnect_team_github_io=self.webpackChunkwppconnect_team_github_io||[]).push([[7207],{3905:(e,n,o)=>{o.d(n,{Zo:()=>l,kt:()=>m});var t=o(67294);function r(e,n,o){return n in e?Object.defineProperty(e,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[n]=o,e}function a(e,n){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),o.push.apply(o,t)}return o}function i(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?a(Object(o),!0).forEach((function(n){r(e,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(o,n))}))}return e}function c(e,n){if(null==e)return{};var o,t,r=function(e,n){if(null==e)return{};var o,t,r={},a=Object.keys(e);for(t=0;t<a.length;t++)o=a[t],n.indexOf(o)>=0||(r[o]=e[o]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)o=a[t],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var s=t.createContext({}),p=function(e){var n=t.useContext(s),o=n;return e&&(o="function"==typeof e?e(n):i(i({},n),e)),o},l=function(e){var n=p(e.components);return t.createElement(s.Provider,{value:n},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var o=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=p(o),d=r,m=u["".concat(s,".").concat(d)]||u[d]||g[d]||a;return o?t.createElement(m,i(i({ref:n},l),{},{components:o})):t.createElement(m,i({ref:n},l))}));function m(e,n){var o=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=o.length,i=new Array(a);i[0]=d;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c[u]="string"==typeof e?e:r,i[1]=c;for(var p=2;p<a;p++)i[p]=o[p];return t.createElement.apply(null,i)}return t.createElement.apply(null,o)}d.displayName="MDXCreateElement"},34097:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>g,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var t=o(87462),r=(o(67294),o(3905));const a={sidebar_position:4},i="Configurando o log",c={unversionedId:"tutorial/basics/configuring-logger",id:"tutorial/basics/configuring-logger",title:"Configurando o log",description:"Wppconnect Bot usa winston pacotes para gerenciamento de log.",source:"@site/i18n/pt-BR/docusaurus-plugin-content-docs/current/tutorial/basics/configuring-logger.md",sourceDirName:"tutorial/basics",slug:"/tutorial/basics/configuring-logger",permalink:"/pt-BR/docs/tutorial/basics/configuring-logger",draft:!1,editUrl:"https://github.com/wppconnect-team/wppconnect-team.github.io/tree/main/docs/tutorial/basics/configuring-logger.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"docs",previous:{title:"Recebendo Mensagens",permalink:"/pt-BR/docs/tutorial/basics/receiving-messages"},next:{title:"Fun\xe7\xf5es B\xe1sicas (uso)",permalink:"/pt-BR/docs/tutorial/basics/basic-functions"}},s={},p=[{value:"N\xedvel padr\xe3o do log",id:"n\xedvel-padr\xe3o-do-log",level:2},{value:"Usando um log customizado",id:"usando-um-log-customizado",level:2},{value:"Log para Arquivo",id:"log-para-arquivo",level:2}],l={toc:p},u="wrapper";function g(e){let{components:n,...o}=e;return(0,r.kt)(u,(0,t.Z)({},l,o,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"configurando-o-log"},"Configurando o log"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Wppconnect Bot")," usa ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/winstonjs/winston"},"winston")," pacotes para gerenciamento de log."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"wppconnect.defaultLogger")," \xe9 uma inst\xe2ncia de ",(0,r.kt)("inlineCode",{parentName:"p"},"winston.createLogger"),"."),(0,r.kt)("h2",{id:"n\xedvel-padr\xe3o-do-log"},"N\xedvel padr\xe3o do log"),(0,r.kt)("p",null,"O n\xedvel de log padr\xe3o \xe9 ",(0,r.kt)("inlineCode",{parentName:"p"},"info")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// Suporta ES6\n// import * as wppconnect from '@wppconnect-team/wppconnect';\nconst wppconnect = require('@wppconnect-team/wppconnect');\n\n// N\xedveis: 'error', 'warn', 'info', 'http', 'verbose', 'debug', 'silly'\n// All logs: 'silly'\nwppconnect.defaultLogger.level = 'silly';\n\n// Se voc\xea quer parar o console de log\nwppconnect.defaultLogger.transports.forEach((t) => (t.silent = true));\n")),(0,r.kt)("h2",{id:"usando-um-log-customizado"},"Usando um log customizado"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// Suporta ES6\n// importe * as wppconnect from '@wppconnect-team/wppconnect';\n// importe * as winston from 'winston';\nconst wppconnect = require('@wppconnect-team/wppconnect');\nconst winston = require('winston');\n\nconst logger = winston. reateLogger({\n  level: 'info',\n  formato: winston.format. son(),\n  defaultMeta: { service: 'user-service' },\n  transportes: [\n    //\n    // - Escreva todos os logs com n\xedvel `error` e abaixo para `error. og`\n    // - Escreva todos os logs com n\xedvel `info` e abaixo para `combinado. og`\n    //\n    new winston.transports. ile({ filename: 'error.log', level: 'error' }),\n    new winston.transports.File({ filename: 'combined.log' }),\n  ],\n});\n\nwppconnect\n  . reate({\n    session: 'sessionName',\n    logger: logger,\n  })\n  .then((cliente) => {\n    start(cliente);\n  })\n  . atch((erro) => {\n    console.log(erro);\n});\n")),(0,r.kt)("h2",{id:"log-para-arquivo"},"Log para Arquivo"),(0,r.kt)("p",null,"Por padr\xe3o, o wppconnect utiliza o transporte do console para o log."),(0,r.kt)("p",null,"Se voc\xea deseja salvar o log em um arquivo, voc\xea pode configurar usando o ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/winstonjs/winston#transports"},"winston transport")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// Suporta ES6\n// importe * as wppconnect from '@wppconnect-team/wppconnect';\n// importe * as winston from 'winston';\nconst wppconnect = require('@wppconnect-team/wppconnect');\nconst winston = require('winston');\n\n// Opcional: Remover todos os transportes padr\xe3o\nwppconnect. efaultLogger.clear(); // Remove todos os transportadores\n\n// Crie um transporte de arquivo\nconst files = new winston. ransports.File({ filename: 'combined.log' });\nwppconnect.defaultLogger.add(files); // Adicionar o transporte de arquivos\n\n// Optinal: criar um console personalizado com n\xedvel de erro\nconst console = new winston.transports. onsole({ level: 'erro' });\nwppconnect.defaultLogger.add(console); // Adicionar transporte do console\n\n// Optinal: Remova o transporte personalizado\nwppconnect.defaultLogger.remove(console); // Remova o transporte do console\n")))}g.isMDXComponent=!0}}]);